(window.webpackJsonp=window.webpackJsonp||[]).push([[11],{402:function(t,n,s){"use strict";s.r(n);var e=s(2),i=Object(e.a)({},(function(){var t=this._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":this.$parent.slotKey}},[t("p",[this._v("打印日志的目的\n不仅是初学者，很多老码农也不能很好的打印日志（注意 : 技术大佬不是本文的目标读者），本质的原因是没有意识到为什么要打印日志，打印日志的目的是什么，这里我就为大家介绍一下。")]),this._v(" "),t("p",[this._v("最重要的原则：在确保日志数量有限的情况下，可以快速定位问题。你仔细想想，在你遇到问题的时候，尤其是生产环境，是不是经常无法快速定位问题，明明打印了日志，却没有上下文，不知道哪个请求，哪个用户，输入参数是什么，然后只能去跟领导说：我要多打一些日志，发布一些才能定位问题。\n跟踪应用的BUG/警告。日志可以帮助开发者和软件测试人员快速跟踪程序崩溃的原因-跟踪性能下降的问题范围。很多时候，性能问题，很难在开发过程中暴露出来，这需要进行全方位的测试跟踪，而通过日志提供的详细执行时间记录可以很方便的找出应用的性能瓶颈\n跟踪操作流程。通过对日志跟踪，你可以获取操作发生的具体环境，操作的结果\n排查疑难杂症。很多问题可能开发测试无法发现，或者由于环境不同，请求量不同，导致一些问题在前期开发测试期间很难被发现，此时日志就发挥重要作用了。\n了解项目的运行状态；了解一些长流程的执行情况\n商业用途。很多大的企业，都会根据日志做一些技术分析，有一些是技术上的，如分析性能瓶颈，热点业务热点接口，是否被爬虫爬取，网站的TPS，响应耗时等等。有一些是产品或商业层面的，如分析用户喜好，用户习惯，AB测试等等\n无论做什么事情，都要搞明白为什么要做，才能做的更好！思考：这些日志真的有人看吗？看到这条日志你能做什么？能不能给问题排查带来好处？")])])}),[],!1,null,null,null);n.default=i.exports}}]);